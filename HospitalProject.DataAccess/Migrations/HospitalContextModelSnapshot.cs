// <auto-generated />
using System;
using HospitalProject.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalProject.DataAccess.Migrations
{
    [DbContext(typeof(HospitalContext))]
    partial class HospitalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalProject.Entities.AileMedikalGecmisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tani")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaniYili")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Yakinlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AileMedikalGecmisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.AlkolKullanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirakisTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GundeMiktar")
                        .HasColumnType("int");

                    b.Property<int>("MevcutDurum")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlkolKullanimis");
                });

            modelBuilder.Entity("HospitalProject.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Definition = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Definition = "Member"
                        });
                });

            modelBuilder.Entity("HospitalProject.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("GenderId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("HospitalProject.Entities.AppUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("AppRoleId", "AppUserId")
                        .IsUnique();

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("HospitalProject.Entities.DonorMedikalGecmisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Durumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastalikTedaviBozukluk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ICD10Kodu")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaniTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("DonorMedikalGecmisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.EkIslemlerMutasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)");

                    b.HasKey("Id");

                    b.ToTable("EkIslemlerMutasyons");
                });

            modelBuilder.Entity("HospitalProject.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlkolKullanimiId")
                        .HasColumnType("int");

                    b.Property<int>("EkislemlerId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("GenelBilgilerId")
                        .HasColumnType("int");

                    b.Property<int>("JinekolojikGecmisId")
                        .HasColumnType("int");

                    b.Property<int>("MaddeKullanimiId")
                        .HasColumnType("int");

                    b.Property<int>("NotlarId")
                        .HasColumnType("int");

                    b.Property<int>("OperasyonProseduruId")
                        .HasColumnType("int");

                    b.Property<int>("PatolojiDurumuId")
                        .HasColumnType("int");

                    b.Property<int>("SigaraKullanimiId")
                        .HasColumnType("int");

                    b.Property<int>("SosyalYasamOzellikleriId")
                        .HasColumnType("int");

                    b.Property<int>("TumorDurumuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlkolKullanimiId");

                    b.HasIndex("EkislemlerId");

                    b.HasIndex("GenderId");

                    b.HasIndex("GenelBilgilerId");

                    b.HasIndex("JinekolojikGecmisId");

                    b.HasIndex("MaddeKullanimiId");

                    b.HasIndex("NotlarId");

                    b.HasIndex("OperasyonProseduruId");

                    b.HasIndex("PatolojiDurumuId");

                    b.HasIndex("SigaraKullanimiId");

                    b.HasIndex("SosyalYasamOzellikleriId");

                    b.HasIndex("TumorDurumuId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormAileMedikalGecmisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AileMedikalGecmisiId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AileMedikalGecmisiId");

                    b.HasIndex("FormId", "AileMedikalGecmisiId")
                        .IsUnique();

                    b.ToTable("FormAileMedikalGecmisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormDonorMedikalGecmisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DonorMedikalGecmisiId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonorMedikalGecmisiId");

                    b.HasIndex("FormId", "DonorMedikalGecmisiId")
                        .IsUnique();

                    b.ToTable("FormDonorMedikalGecmisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormIlac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("IlacId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IlacId");

                    b.HasIndex("FormId", "IlacId")
                        .IsUnique();

                    b.ToTable("FormIlacs");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormImmunhistokimya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("ImmunhistokimyaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImmunhistokimyaId");

                    b.HasIndex("FormId", "ImmunhistokimyaId")
                        .IsUnique();

                    b.ToTable("FormImmunhistokimyas");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormKanserTedavisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("KanserTedavisiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KanserTedavisiId");

                    b.HasIndex("FormId", "KanserTedavisiId")
                        .IsUnique();

                    b.ToTable("FormKanserTedavisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormMetastazDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("MetastazDurumuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MetastazDurumuId");

                    b.HasIndex("FormId", "MetastazDurumuId")
                        .IsUnique();

                    b.ToTable("FormMetastazDurumus");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormNumuneToplamaBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("NumuneToplamaBilgileriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumuneToplamaBilgileriId");

                    b.HasIndex("FormId", "NumuneToplamaBilgileriId")
                        .IsUnique();

                    b.ToTable("FormNumuneToplamaBilgileri");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormTanıBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("TaniBilgileriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaniBilgileriId");

                    b.HasIndex("FormId", "TaniBilgileriId")
                        .IsUnique();

                    b.ToTable("FormTanıBilgileris");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormViralEnfeksiyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("ViralEnfeksiyonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViralEnfeksiyonId");

                    b.HasIndex("FormId", "ViralEnfeksiyonId")
                        .IsUnique();

                    b.ToTable("FormViralEnfeksiyons");
                });

            modelBuilder.Entity("HospitalProject.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Genderd");
                });

            modelBuilder.Entity("HospitalProject.Entities.GenelBilgiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Boy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DogumTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("EgitimSeviyesi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EtnikKoken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Kilo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenelBilgilers");
                });

            modelBuilder.Entity("HospitalProject.Entities.Ilac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doz")
                        .HasColumnType("int");

                    b.Property<string>("IlacAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanımSekli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MevcutDurum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siklik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ilacs");
                });

            modelBuilder.Entity("HospitalProject.Entities.ImmunhistokimyaTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sonuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestDurumu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Virus")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("ImmunhistokimyaTests");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Virus = "ER"
                        },
                        new
                        {
                            Id = 3,
                            Virus = "PR"
                        },
                        new
                        {
                            Id = 4,
                            Virus = "HER2/NEU"
                        },
                        new
                        {
                            Id = 5,
                            Virus = "MLH1"
                        },
                        new
                        {
                            Id = 6,
                            Virus = "PMS2"
                        },
                        new
                        {
                            Id = 7,
                            Virus = "MSH2"
                        },
                        new
                        {
                            Id = 8,
                            Virus = "MSH6"
                        });
                });

            modelBuilder.Entity("HospitalProject.Entities.JinekolojikGecmis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dogumlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hamilelikler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenstüralDurum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SonReglTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("jinekolojikGecmiss");
                });

            modelBuilder.Entity("HospitalProject.Entities.KanserTedavisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TedaviBaslangicBitis")
                        .HasColumnType("datetime2");

                    b.Property<string>("TedaviSonucu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TedaviTipi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TedaviUygulamaSekli")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KanserTedavisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.MaddeKullanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GundeMiktar")
                        .HasColumnType("int");

                    b.Property<int>("MevcutDurum")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaddeKullanimis");
                });

            modelBuilder.Entity("HospitalProject.Entities.MetasazDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LenfNoduIslemivarmı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LenfNoduLokasyonu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LenfNoduMetastazvarmı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetastazOrganı")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UzakMetastazLokasyonu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UzakMetastazvarmı")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetasazDurumus");
                });

            modelBuilder.Entity("HospitalProject.Entities.Notlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)");

                    b.HasKey("Id");

                    b.ToTable("Notlars");
                });

            modelBuilder.Entity("HospitalProject.Entities.NumuneToplamaBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnotomikBolge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplamaSaati")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToplamaSekli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToplamaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("NumuneToplamaBilgisi");
                });

            modelBuilder.Entity("HospitalProject.Entities.OperasyonProseduru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperasyonProsedurus");
                });

            modelBuilder.Entity("HospitalProject.Entities.PatolojiDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MikroskopikAnaliz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumuneToplamaSekli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatolojikTanı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatolojiDurumus");
                });

            modelBuilder.Entity("HospitalProject.Entities.SigaraKullanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirakisTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GundeMiktar")
                        .HasColumnType("int");

                    b.Property<int>("MevcutDurum")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SigaraKullanimis");
                });

            modelBuilder.Entity("HospitalProject.Entities.SosyalYasamOzellikleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CevreselMazuriyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meslek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SosyalYasamOzellikleris");
                });

            modelBuilder.Entity("HospitalProject.Entities.TaniBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ICD10TanıKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlinikTani")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TaniTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("TaniBilgileris");
                });

            modelBuilder.Entity("HospitalProject.Entities.TumorDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Evre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TumorBolgesi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TumorBoyutu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TumorTipi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TumorDurumus");
                });

            modelBuilder.Entity("HospitalProject.Entities.ViralEnfeksiyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sonuc")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("TestDurumu")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Virus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViralEnfeksiyons");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Virus = "HIV1/2"
                        },
                        new
                        {
                            Id = 3,
                            Virus = "Hepatit A"
                        },
                        new
                        {
                            Id = 4,
                            Virus = "Hepatit B"
                        },
                        new
                        {
                            Id = 5,
                            Virus = "Hepatit C"
                        },
                        new
                        {
                            Id = 6,
                            Virus = "Sifliz"
                        });
                });

            modelBuilder.Entity("HospitalProject.Entities.AppUser", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("AppUsers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.Gender", "Gender")
                        .WithMany("Appusers")
                        .HasForeignKey("GenderId");

                    b.Navigation("Form");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("HospitalProject.Entities.AppUserRole", b =>
                {
                    b.HasOne("HospitalProject.Entities.AppRole", "AppRole")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HospitalProject.Entities.Form", b =>
                {
                    b.HasOne("HospitalProject.Entities.AlkolKullanimi", "AlkolKullanimi")
                        .WithMany("Forms")
                        .HasForeignKey("AlkolKullanimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.EkIslemlerMutasyon", "EkIslemlerMutasyon")
                        .WithMany("Forms")
                        .HasForeignKey("EkislemlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.Gender", "Gender")
                        .WithMany("Forms")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.GenelBilgiler", "GenelBilgiler")
                        .WithMany("Forms")
                        .HasForeignKey("GenelBilgilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.JinekolojikGecmis", "JinekolojikGecmis")
                        .WithMany("Forms")
                        .HasForeignKey("JinekolojikGecmisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.MaddeKullanimi", "MaddeKullanimi")
                        .WithMany("Forms")
                        .HasForeignKey("MaddeKullanimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.Notlar", "Notlar")
                        .WithMany("Forms")
                        .HasForeignKey("NotlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.OperasyonProseduru", "OperasyonProseduru")
                        .WithMany("Forms")
                        .HasForeignKey("OperasyonProseduruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.PatolojiDurumu", "PatolojiDurumu")
                        .WithMany("Forms")
                        .HasForeignKey("PatolojiDurumuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.SigaraKullanimi", "SigaraKullanimi")
                        .WithMany("Forms")
                        .HasForeignKey("SigaraKullanimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.SosyalYasamOzellikleri", "SosyalYasamOzellikleri")
                        .WithMany("Forms")
                        .HasForeignKey("SosyalYasamOzellikleriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.TumorDurumu", "TumorDurumu")
                        .WithMany("Forms")
                        .HasForeignKey("TumorDurumuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlkolKullanimi");

                    b.Navigation("EkIslemlerMutasyon");

                    b.Navigation("Gender");

                    b.Navigation("GenelBilgiler");

                    b.Navigation("JinekolojikGecmis");

                    b.Navigation("MaddeKullanimi");

                    b.Navigation("Notlar");

                    b.Navigation("OperasyonProseduru");

                    b.Navigation("PatolojiDurumu");

                    b.Navigation("SigaraKullanimi");

                    b.Navigation("SosyalYasamOzellikleri");

                    b.Navigation("TumorDurumu");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormAileMedikalGecmisi", b =>
                {
                    b.HasOne("HospitalProject.Entities.AileMedikalGecmisi", "AileMedikalGecmisi")
                        .WithMany("FormAileMedikalGecmisis")
                        .HasForeignKey("AileMedikalGecmisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormAileMedikalGecmisis")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AileMedikalGecmisi");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormDonorMedikalGecmisi", b =>
                {
                    b.HasOne("HospitalProject.Entities.DonorMedikalGecmisi", "DonorMedikalGecmisi")
                        .WithMany("FormDonorMedikalGecmisis")
                        .HasForeignKey("DonorMedikalGecmisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormDonorMedikalGecmisis")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonorMedikalGecmisi");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormIlac", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormIlacs")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.Ilac", "Ilac")
                        .WithMany("FormIlacs")
                        .HasForeignKey("IlacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("Ilac");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormImmunhistokimya", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormImmunhistokimyas")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.ImmunhistokimyaTest", "ImmunhistokimyaTest")
                        .WithMany("FormImmunhistokimyas")
                        .HasForeignKey("ImmunhistokimyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("ImmunhistokimyaTest");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormKanserTedavisi", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormKanserTedavisis")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.KanserTedavisi", "KanserTedavisi")
                        .WithMany("FormKanserTedavisis")
                        .HasForeignKey("KanserTedavisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("KanserTedavisi");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormMetastazDurumu", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormMetastazDurumus")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.MetasazDurumu", "MetasazDurumu")
                        .WithMany("FormMetastazDurumus")
                        .HasForeignKey("MetastazDurumuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("MetasazDurumu");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormNumuneToplamaBilgileri", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormNumuneToplamaBilgileris")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.NumuneToplamaBilgisi", "NumuneToplamaBilgisi")
                        .WithMany("FormNumuneToplamaBilgileris")
                        .HasForeignKey("NumuneToplamaBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("NumuneToplamaBilgisi");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormTanıBilgileri", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormTanıBilgileris")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.TaniBilgileri", "TaniBilgileri")
                        .WithMany("FormTanıBilgileris")
                        .HasForeignKey("TaniBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("TaniBilgileri");
                });

            modelBuilder.Entity("HospitalProject.Entities.FormViralEnfeksiyon", b =>
                {
                    b.HasOne("HospitalProject.Entities.Form", "Form")
                        .WithMany("FormViralEnfeksiyons")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Entities.ViralEnfeksiyon", "ViralEnfeksiyon")
                        .WithMany("FormViralEnfeksiyons")
                        .HasForeignKey("ViralEnfeksiyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");

                    b.Navigation("ViralEnfeksiyon");
                });

            modelBuilder.Entity("HospitalProject.Entities.AileMedikalGecmisi", b =>
                {
                    b.Navigation("FormAileMedikalGecmisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.AlkolKullanimi", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.AppRole", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("HospitalProject.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("HospitalProject.Entities.DonorMedikalGecmisi", b =>
                {
                    b.Navigation("FormDonorMedikalGecmisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.EkIslemlerMutasyon", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.Form", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("FormAileMedikalGecmisis");

                    b.Navigation("FormDonorMedikalGecmisis");

                    b.Navigation("FormIlacs");

                    b.Navigation("FormImmunhistokimyas");

                    b.Navigation("FormKanserTedavisis");

                    b.Navigation("FormMetastazDurumus");

                    b.Navigation("FormNumuneToplamaBilgileris");

                    b.Navigation("FormTanıBilgileris");

                    b.Navigation("FormViralEnfeksiyons");
                });

            modelBuilder.Entity("HospitalProject.Entities.Gender", b =>
                {
                    b.Navigation("Appusers");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.GenelBilgiler", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.Ilac", b =>
                {
                    b.Navigation("FormIlacs");
                });

            modelBuilder.Entity("HospitalProject.Entities.ImmunhistokimyaTest", b =>
                {
                    b.Navigation("FormImmunhistokimyas");
                });

            modelBuilder.Entity("HospitalProject.Entities.JinekolojikGecmis", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.KanserTedavisi", b =>
                {
                    b.Navigation("FormKanserTedavisis");
                });

            modelBuilder.Entity("HospitalProject.Entities.MaddeKullanimi", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.MetasazDurumu", b =>
                {
                    b.Navigation("FormMetastazDurumus");
                });

            modelBuilder.Entity("HospitalProject.Entities.Notlar", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.NumuneToplamaBilgisi", b =>
                {
                    b.Navigation("FormNumuneToplamaBilgileris");
                });

            modelBuilder.Entity("HospitalProject.Entities.OperasyonProseduru", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.PatolojiDurumu", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.SigaraKullanimi", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.SosyalYasamOzellikleri", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.TaniBilgileri", b =>
                {
                    b.Navigation("FormTanıBilgileris");
                });

            modelBuilder.Entity("HospitalProject.Entities.TumorDurumu", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HospitalProject.Entities.ViralEnfeksiyon", b =>
                {
                    b.Navigation("FormViralEnfeksiyons");
                });
#pragma warning restore 612, 618
        }
    }
}
